# -*- eval: (save-excursion (org-babel-goto-named-src-block "workshopPreamble") (org-babel-execute-src-block)) -*-
#+TITLE:     Regression Models in R
#+AUTHOR:    Jörg Reuter
#+EMAIL:     dataclass@help.hmdc.harvard.edu
#+DATE:      
#+PROPERTY: exports both
#+EXCLUDE_TAGS: noexport mitsetup

#+SETUPFILE: ../workshopPreamble.org

#+name: workshopPreamble
#+begin_src emacs-lisp :exports none :results silent :tangle no
  (load-file "../setupEnvironment.el")
#+end_src

#+name: setupR
#+begin_src R :exports none :tangle no :results silent
  rm(list=ls())
  .First <- function() {
    options(width=70)
    options(useFancyQuotes=FALSE)
    options(show.signif.stars=FALSE)
    options(scipen = 10)
    options(digits = 3)
  }
#+end_src
* Introduction

** Workshop description

- This is an intermediate/advanced R course
- Appropriate for those with basic knowledge of R
- This is not a statistics course! 
- Learning objectives:
  - Learn the R formula interface
  - Specify factor contrasts to test specific hypotheses
  - Perform model comparisons
  - Run and interpret variety of regression models in R


* Einführung in Docker
Wir laden das Image von Ubuntu 14.04 herunter:

#+name: setupR
#+begin_src bash
docker pull ubuntu:14.04
#+end_src bash

Anzeige der lokal vorhanden Images:

#+name: local_Images
#+begin_src bash
docker images
#+end_src bash

Zugriff auf die Shell

#+name: dockerrun
#+begin_src bash
docker run -t -i ubuntu:14.04 bash
#+end_src bash

Wir benötigen jetzt eine zweite Konsole die nicht im Docker-Container angemeldet ist. Diese Konsole wird benötigt um den Docker-Container zu verwalten.
Von einer zweiten Konsole:
#+name: dockerps
#+begin_src bash
docker ps
#+end_src bash

um sich den Namen des laufenden Docker Container anzeigen zu lassen 
Docker Container anhalten (hungy_euklid ist der Name der jeweiligen Maschine):

#+name: docker stop
#+begin_src bash
docker stop hungry_euclid
#+end_src bash

Gestoppten Container neu starten:

#+name: dockerstart
#+begin_src bash
docker start -i hungry_euclid
#+end_src bash

Container löschen:

#+name: dockerloeschen
#+begin_src bash
docker stop hungry_euclid
docker rm hungry_euclid
#+end_src bash

Nginx Image herunterladen, Conntainer starten und den Namen nginx geben:
docker run -d --name nginx nginx

#+name: dockerpss
#+begin_src bash
docker ps -s
#+end_src bash

Alle laufenden und gestoppten Container löschen:

#+name: dockerdelete
#+begin_src bash
docker ps -qa|xargs docker rm -f
#+end_src bash

* Zum Schluss

** Helfe mir, den Kurs besser zu machen!
- Bitte nehme Dir einen Moment Zeit und fülle das Feedback-Formular aus.
- Der Kurs existiert für Dich -- sage mir, was Du brauchst! 
- * Wrap-up

** Help us make this workshop better!
- Please take a moment to fill out a very short 
feedback form 
- These workshops exist for you -- tell us what you need! 
- http://goo.gl/forms/04cJw2mtBB

** Weitere Informationsquellen
* Cleanup							   :noexport:
#+name: cleanitallup
#+begin_src R 
  rm(list=ls())
#+end_src

#+RESULTS: cleanitallup
#+begin_example
> rm(list=ls())
> 
#+end_example
